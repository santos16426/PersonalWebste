{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/billyjoesantos/Desktop/personal/website-next/components/ContactMe/contact-form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\tdisplay: flex;\\n\\n\\t&:first-child {\\n\\t\\tmargin-top: 8px;\\n\\t}\\n\\t.custom-field {\\n\\t\\tflex: 1;\\n\\t\\t&.with-right-offset {\\n\\t\\t\\tmargin-right: 24px;\\n\\t\\t\\t@media screen and (max-width: \", \") {\\n\\t\\t\\t\\tmargin-right: 0px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.ant-checkbox-wrapper {\\n\\t\\tdisplay: block;\\n\\t\\tpadding-left: 15px;\\n\\t\\ttext-indent: -15px;\\n\\t\\tline-height: 24px;\\n\\t\\tfont-size: 12px;\\n\\t\\ta {\\n\\t\\t\\tcolor: \", \";\\n\\t\\t}\\n\\t\\t.ant-checkbox {\\n\\t\\t\\twidth: 13px;\\n\\t\\t\\theight: 13px;\\n\\t\\t\\tpadding: 0;\\n\\t\\t\\tmargin: 0;\\n\\t\\t\\tvertical-align: bottom;\\n\\t\\t\\tposition: relative;\\n\\t\\t\\ttop: -7px;\\n\\t\\t}\\n\\t}\\n\\n\\t.ant-form-extra {\\n\\t\\ttext-align: right;\\n\\t\\tposition: absolute;\\n\\t\\twidth: 100%;\\n\\t\\ttop: 85px;\\n\\t}\\n\\n\\t.custom-recaptcha {\\n\\t\\t@media screen and (max-width: \", \") {\\n\\t\\t\\ttransform: scale(0.8) !important;\\n\\t\\t\\ttransform-origin: 0 0 !important;\\n\\t\\t}\\n\\t}\\n\\n\\t@media screen and (max-width: \", \") {\\n\\t\\tflex-direction: column;\\n\\t}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n\\tbackground: #ffffff;\\n\\tflex: 3;\\n\\twidth: 100%;\\n\\tborder-radius: 7px 0 0 7px;\\n\\tpadding: 30px 40px;\\n\\tbox-shadow: 0 22px 34px -10px rgba(38, 47, 67, 0.3);\\n\\th2 {\\n\\t\\tfont-size: 20px;\\n\\t\\tcolor: #0073af;\\n\\t}\\n\\t@media screen and (max-width: \", \") {\\n\\t\\tborder-radius: 7px 7px 0 0;\\n\\t\\tpadding: 15px 40px;\\n\\t}\\n\\n\\t@media screen and (min-width: \", \") and (min-width: \", \") {\\n\\t\\tborder-radius: 7px 0 0 7px;\\n\\t\\tpadding: 15px 40px;\\n\\t}\\n\\n\\t@media screen and (min-width: \", \") {\\n\\t\\tmin-width: 583px;\\n\\t}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Form } from \"antd\";\nimport { FormWrapper } from \"./styles\";\nimport styled from \"styled-components\";\nvar Item = Form.Item;\nvar ContactFormContainer = styled.div(_templateObject(), function (props) {\n  return props.theme.phone;\n}, function (props) {\n  return props.theme.phone;\n}, function (props) {\n  return props.theme.tablet;\n}, function (props) {\n  return props.theme.tablet;\n});\nvar InputGroupWrapper = styled.div(_templateObject2(), function (props) {\n  return props.theme.tablet;\n}, function (props) {\n  return props.theme.linkTextColor;\n}, function (props) {\n  return props.theme.phone;\n}, function (props) {\n  return props.theme.tablet;\n});\n\nvar ContactForm = function ContactForm(props) {\n  var form = props.form;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    form.validateFieldsAndScroll(function (err, values) {});\n  };\n\n  return __jsx(ContactFormContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Contact Me\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"I am interested in freelance opportunities - especially ambitious or large projects. However, if you have other request or question, don't hesitate to contact me using below form either.\"), __jsx(Form, {\n    className: \"form-group\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, getFieldDecorator(\"inquiry\", {\n    rules: [{\n      required: true,\n      message: \"Please select an inquiry.\"\n    }]\n  })(__jsx(Dropdown, {\n    placeholder: \"Type of Inquiry\",\n    size: \"large\",\n    data: contactData.inquiry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })))), __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field with-right-offset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, getFieldDecorator(\"firstName\", {\n    getValueFromEvent: onInputChange,\n    rules: [{\n      required: true,\n      message: \"Please input your first name.\"\n    }, {\n      pattern: /^[a-z ,.'-]+$/i,\n      message: \"Please input alphabetical letters only.\"\n    }, {\n      min: 2,\n      message: \"Please input at least 2 characters.\"\n    }]\n  })(__jsx(TextInputWithAddon, {\n    placeholder: \"First Name\",\n    size: \"large\",\n    addonBefore: getFieldDecorator(\"salutation\", {\n      initialValue: \"Mr\"\n    })(__jsx(Select, {\n      dropdownClassName: \"custom-dropdown salutation\",\n      suffixIcon: __jsx(\"img\", {\n        src: \"/static/dropdown.svg\",\n        alt: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, contactData.salutations.map(function (title) {\n      return __jsx(Option, {\n        key: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, title);\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }))), __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, getFieldDecorator(\"lastName\", {\n    getValueFromEvent: onInputChange,\n    rules: [{\n      required: true,\n      message: \"Please input your last name.\"\n    }, {\n      pattern: /^[a-z ,.'-]+$/i,\n      message: \"Please input alphabetical letters only.\"\n    }, {\n      min: 2,\n      message: \"Please input at least 2 characters.\"\n    }]\n  })(__jsx(TextInput, {\n    placeholder: \"Last Name\",\n    size: \"large\",\n    \"aria-label\": \"last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })))), __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field with-right-offset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    getValueFromEvent: onInputChangeTrimAll,\n    rules: [{\n      required: true,\n      message: \"Please input your email address.\"\n    }, {\n      type: \"email\",\n      message: \"Please input a valid email address.\"\n    }]\n  })(__jsx(TextInput, {\n    placeholder: \"Email\",\n    size: \"large\",\n    \"aria-label\": \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, getFieldDecorator(\"phoneNumber\", {\n    getValueFromEvent: onInputChangeTrimAll,\n    rules: [{\n      pattern: /^[0-9]+$/i,\n      message: \"Please input a valid number.\"\n    }, {\n      max: 20,\n      message: \"Maximum of 20 characters only.\"\n    }]\n  })(__jsx(TextInputWithAddon, {\n    placeholder: \"Phone Number\",\n    withoffset: \"true\",\n    size: \"large\",\n    \"aria-label\": \"phone number\",\n    addonBefore: getFieldDecorator(\"country\", {\n      initialValue: countryName\n    })(__jsx(Select, {\n      dropdownClassName: \"custom-dropdown country-list\",\n      onChange: function onChange(value) {\n        return setCountry(value);\n      },\n      suffixIcon: __jsx(\"img\", {\n        src: \"/static/dropdown.svg\",\n        alt: \"dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, countries.map(function (_ref) {\n      var name = _ref.name,\n          flag = _ref.flag,\n          callingCodes = _ref.callingCodes,\n          alpha2Code = _ref.alpha2Code;\n      return __jsx(Option, {\n        key: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"country-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: flag,\n        alt: name,\n        className: \"dropdown-content flag\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        className: \"country-code\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"\".concat(name, \" +\").concat(callingCodes[0])), __jsx(\"p\", {\n        className: \"country-phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"+(\".concat(callingCodes[0], \")\"))));\n    }))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  })))), __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field\",\n    extra: \"\".concat(charLimit, \"/255\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, getFieldDecorator(\"message\", {\n    getValueFromEvent: onInputChange,\n    rules: [{\n      required: true,\n      message: \"Please input your message.\"\n    }]\n  })(__jsx(LargeTextInput, {\n    size: \"large\",\n    autosize: {\n      minRows: 3,\n      maxRows: 3\n    },\n    placeholder: \"Message\",\n    maxLength: \"255\",\n    \"aria-label\": \"message\",\n    onChange: function onChange(e) {\n      setCharLimit(e.target.value.length);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  })))), __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field with-right-offset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }, getFieldDecorator(\"termAgreed\", {\n    rules: [{\n      required: true,\n      validator: validateTermsAndConditions,\n      message: \"You must agree to the Terms and Conditions.\"\n    }]\n  })(__jsx(Checkbox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"I Agree to the\", __jsx(Link, {\n    href: \"/terms-and-conditions\",\n    prefetch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, \" Terms and Conditions \")), \"and\", __jsx(Link, {\n    href: \"/privacy-policy\",\n    prefetch: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, \" Privacy Policies \")), \"of Alveo Land Corp.\")))), __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field with-right-offset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, getFieldDecorator(\"recaptchaToken\", {\n    rules: [{\n      required: true,\n      message: \"Please verify that you are not a robot.\"\n    }]\n  })(__jsx(ReCAPTCHA, {\n    className: \"custom-recaptcha\",\n    sitekey: credentials.GOOGLE_RECAPTCHA_SITE_KEY,\n    ref: function ref(e) {\n      return captcha = e;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }))), __jsx(Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, __jsx(SkewedButton, {\n    htmlType: \"submit\",\n    disabled: isFormSubmitting || messageSent,\n    className: messageSent ? \"success\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"submit-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306\n    },\n    __self: this\n  }, renderIcon()), __jsx(\"span\", {\n    className: \"submit-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    },\n    __self: this\n  }, renderButtonMessage()))))));\n};\n\nexport default Form.create()(ContactForm);","map":{"version":3,"sources":["/Users/billyjoesantos/Desktop/personal/website-next/components/ContactMe/contact-form.js"],"names":["Form","FormWrapper","styled","Item","ContactFormContainer","div","props","theme","phone","tablet","InputGroupWrapper","linkTextColor","ContactForm","form","handleSubmit","e","preventDefault","validateFieldsAndScroll","err","values","getFieldDecorator","rules","required","message","contactData","inquiry","getValueFromEvent","onInputChange","pattern","min","initialValue","salutations","map","title","onInputChangeTrimAll","type","max","countryName","value","setCountry","countries","name","flag","callingCodes","alpha2Code","charLimit","minRows","maxRows","setCharLimit","target","length","validator","validateTermsAndConditions","credentials","GOOGLE_RECAPTCHA_SITE_KEY","captcha","isFormSubmitting","messageSent","renderIcon","renderButtonMessage","create"],"mappings":"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","sourcesContent":["import { Form } from \"antd\";\nimport { FormWrapper } from \"./styles\";\nimport styled from \"styled-components\";\nconst { Item } = Form;\nconst ContactFormContainer = styled.div`\n\tbackground: #ffffff;\n\tflex: 3;\n\twidth: 100%;\n\tborder-radius: 7px 0 0 7px;\n\tpadding: 30px 40px;\n\tbox-shadow: 0 22px 34px -10px rgba(38, 47, 67, 0.3);\n\th2 {\n\t\tfont-size: 20px;\n\t\tcolor: #0073af;\n\t}\n\t@media screen and (max-width: ${props => props.theme.phone}) {\n\t\tborder-radius: 7px 7px 0 0;\n\t\tpadding: 15px 40px;\n\t}\n\n\t@media screen and (min-width: ${props =>\n\t\t\tprops.theme.phone}) and (min-width: ${props => props.theme.tablet}) {\n\t\tborder-radius: 7px 0 0 7px;\n\t\tpadding: 15px 40px;\n\t}\n\n\t@media screen and (min-width: ${props => props.theme.tablet}) {\n\t\tmin-width: 583px;\n\t}\n`;\n\nconst InputGroupWrapper = styled.div`\n\tdisplay: flex;\n\n\t&:first-child {\n\t\tmargin-top: 8px;\n\t}\n\t.custom-field {\n\t\tflex: 1;\n\t\t&.with-right-offset {\n\t\t\tmargin-right: 24px;\n\t\t\t@media screen and (max-width: ${props => props.theme.tablet}) {\n\t\t\t\tmargin-right: 0px;\n\t\t\t}\n\t\t}\n\t}\n\n\t.ant-checkbox-wrapper {\n\t\tdisplay: block;\n\t\tpadding-left: 15px;\n\t\ttext-indent: -15px;\n\t\tline-height: 24px;\n\t\tfont-size: 12px;\n\t\ta {\n\t\t\tcolor: ${props => props.theme.linkTextColor};\n\t\t}\n\t\t.ant-checkbox {\n\t\t\twidth: 13px;\n\t\t\theight: 13px;\n\t\t\tpadding: 0;\n\t\t\tmargin: 0;\n\t\t\tvertical-align: bottom;\n\t\t\tposition: relative;\n\t\t\ttop: -7px;\n\t\t}\n\t}\n\n\t.ant-form-extra {\n\t\ttext-align: right;\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\ttop: 85px;\n\t}\n\n\t.custom-recaptcha {\n\t\t@media screen and (max-width: ${props => props.theme.phone}) {\n\t\t\ttransform: scale(0.8) !important;\n\t\t\ttransform-origin: 0 0 !important;\n\t\t}\n\t}\n\n\t@media screen and (max-width: ${props => props.theme.tablet}) {\n\t\tflex-direction: column;\n\t}\n`;\n\nconst ContactForm = props => {\n\tlet { form } = props;\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tform.validateFieldsAndScroll((err, values) => {});\n\t};\n\treturn (\n\t\t<ContactFormContainer>\n\t\t\t<p className=\"title\">Contact Me</p>\n\t\t\t<p>\n\t\t\t\tI am interested in freelance opportunities - especially ambitious or\n\t\t\t\tlarge projects. However, if you have other request or question, don't\n\t\t\t\thesitate to contact me using below form either.\n\t\t\t</p>\n\t\t\t<Form className=\"form-group\" onSubmit={handleSubmit}>\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t\t{getFieldDecorator(\"inquiry\", {\n\t\t\t\t\t\t\trules: [{ required: true, message: \"Please select an inquiry.\" }]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\t\tplaceholder=\"Type of Inquiry\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tdata={contactData.inquiry}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field with-right-offset\">\n\t\t\t\t\t\t{getFieldDecorator(\"firstName\", {\n\t\t\t\t\t\t\tgetValueFromEvent: onInputChange,\n\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{ required: true, message: \"Please input your first name.\" },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^[a-z ,.'-]+$/i,\n\t\t\t\t\t\t\t\t\tmessage: \"Please input alphabetical letters only.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ min: 2, message: \"Please input at least 2 characters.\" }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<TextInputWithAddon\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taddonBefore={getFieldDecorator(\"salutation\", {\n\t\t\t\t\t\t\t\t\tinitialValue: \"Mr\"\n\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tdropdownClassName=\"custom-dropdown salutation\"\n\t\t\t\t\t\t\t\t\t\tsuffixIcon={\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"/static/dropdown.svg\" alt=\"dropdown\" />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{contactData.salutations.map(title => (\n\t\t\t\t\t\t\t\t\t\t\t<Option key={title}>{title}</Option>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t\t{getFieldDecorator(\"lastName\", {\n\t\t\t\t\t\t\tgetValueFromEvent: onInputChange,\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{ required: true, message: \"Please input your last name.\" },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^[a-z ,.'-]+$/i,\n\t\t\t\t\t\t\t\t\tmessage: \"Please input alphabetical letters only.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{ min: 2, message: \"Please input at least 2 characters.\" }\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<TextInput\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"last name\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field with-right-offset\">\n\t\t\t\t\t\t{getFieldDecorator(\"email\", {\n\t\t\t\t\t\t\tgetValueFromEvent: onInputChangeTrimAll,\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{ required: true, message: \"Please input your email address.\" },\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttype: \"email\",\n\t\t\t\t\t\t\t\t\tmessage: \"Please input a valid email address.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<TextInput placeholder=\"Email\" size=\"large\" aria-label=\"email\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t\t{getFieldDecorator(\"phoneNumber\", {\n\t\t\t\t\t\t\tgetValueFromEvent: onInputChangeTrimAll,\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^[0-9]+$/i,\n\t\t\t\t\t\t\t\t\tmessage: \"Please input a valid number.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmax: 20,\n\t\t\t\t\t\t\t\t\tmessage: \"Maximum of 20 characters only.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<TextInputWithAddon\n\t\t\t\t\t\t\t\tplaceholder=\"Phone Number\"\n\t\t\t\t\t\t\t\twithoffset=\"true\"\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\taria-label=\"phone number\"\n\t\t\t\t\t\t\t\taddonBefore={getFieldDecorator(\"country\", {\n\t\t\t\t\t\t\t\t\tinitialValue: countryName\n\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tdropdownClassName=\"custom-dropdown country-list\"\n\t\t\t\t\t\t\t\t\t\tonChange={value => setCountry(value)}\n\t\t\t\t\t\t\t\t\t\tsuffixIcon={\n\t\t\t\t\t\t\t\t\t\t\t<img src=\"/static/dropdown.svg\" alt=\"dropdown\" />\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{countries.map(\n\t\t\t\t\t\t\t\t\t\t\t({ name, flag, callingCodes, alpha2Code }) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<Option key={name}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"country-list\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={flag}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"dropdown-content flag\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"country-code\">{`${name} +${callingCodes[0]}`}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p className=\"country-phone\">{`+(${callingCodes[0]})`}</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field\" extra={`${charLimit}/255`}>\n\t\t\t\t\t\t{getFieldDecorator(\"message\", {\n\t\t\t\t\t\t\tgetValueFromEvent: onInputChange,\n\t\t\t\t\t\t\trules: [{ required: true, message: \"Please input your message.\" }]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<LargeTextInput\n\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\tautosize={{ minRows: 3, maxRows: 3 }}\n\t\t\t\t\t\t\t\tplaceholder=\"Message\"\n\t\t\t\t\t\t\t\tmaxLength=\"255\"\n\t\t\t\t\t\t\t\taria-label=\"message\"\n\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\tsetCharLimit(e.target.value.length);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field with-right-offset\">\n\t\t\t\t\t\t{getFieldDecorator(\"termAgreed\", {\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tvalidator: validateTermsAndConditions,\n\t\t\t\t\t\t\t\t\tmessage: \"You must agree to the Terms and Conditions.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<Checkbox>\n\t\t\t\t\t\t\t\tI Agree to the\n\t\t\t\t\t\t\t\t<Link href=\"/terms-and-conditions\" prefetch>\n\t\t\t\t\t\t\t\t\t<a> Terms and Conditions </a>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\tand\n\t\t\t\t\t\t\t\t<Link href=\"/privacy-policy\" prefetch>\n\t\t\t\t\t\t\t\t\t<a> Privacy Policies </a>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\tof Alveo Land Corp.\n\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field with-right-offset\">\n\t\t\t\t\t\t{getFieldDecorator(\"recaptchaToken\", {\n\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\tmessage: \"Please verify that you are not a robot.\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t<ReCAPTCHA\n\t\t\t\t\t\t\t\tclassName=\"custom-recaptcha\"\n\t\t\t\t\t\t\t\tsitekey={credentials.GOOGLE_RECAPTCHA_SITE_KEY}\n\t\t\t\t\t\t\t\tref={e => (captcha = e)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<SkewedButton\n\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\tdisabled={isFormSubmitting || messageSent}\n\t\t\t\t\t\t\tclassName={messageSent ? \"success\" : \"\"}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"submit-icon\">{renderIcon()}</span>\n\t\t\t\t\t\t\t<span className=\"submit-message\">{renderButtonMessage()}</span>\n\t\t\t\t\t\t</SkewedButton>\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\t\t\t</Form>\n\t\t</ContactFormContainer>\n\t);\n};\nexport default Form.create()(ContactForm);\n"]},"metadata":{},"sourceType":"module"}