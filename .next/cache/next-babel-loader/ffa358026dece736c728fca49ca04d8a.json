{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/billyjoesantos/Desktop/personal/website-next/components/ContactMe/contact-form.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { Form, Icon, message } from \"antd\";\nimport { FormWrapper, InputGroupWrapper } from \"./styles\";\nimport TextInput from \"../input_fields/TextInput\";\nimport TextArea from \"../input_fields/TextArea\";\nimport { SkewedButton } from \"../button/\";\nimport HoverText from \"../HoverText\";\nimport emailjs from \"emailjs-com\";\nvar Item = Form.Item;\n\nvar ContactForm = function ContactForm(_ref) {\n  var form = _ref.form;\n\n  var _useState = useState(false),\n      isFormSubmitting = _useState[0],\n      setFormToSubmitting = _useState[1];\n\n  var _useState2 = useState(false),\n      messageSent = _useState2[0],\n      setMessageSent = _useState2[1];\n\n  var getFieldDecorator = form.getFieldDecorator;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setFormToSubmitting(true);\n    form.validateFields(function _callee(err, values) {\n      var template_params, service_id, template_id, data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (err) {\n                _context.next = 9;\n                break;\n              }\n\n              template_params = {\n                name: values.name,\n                email: values.email,\n                subject: values.subject,\n                message: values.message\n              };\n              service_id = \"billy_joe_santos\";\n              template_id = \"contact_form\";\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(emailjs.send(service_id, template_id, template_params));\n\n            case 6:\n              data = _context.sent;\n\n              if (data.status === 200) {\n                form.resetFields();\n                message.success(\"Sent\");\n              } else {\n                message.success(\"Sorry! Try again later\");\n              }\n\n              setFormToSubmitting(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n  };\n\n  var renderButtonMessage = function renderButtonMessage() {\n    if (isFormSubmitting) {\n      return \"Sending...\";\n    }\n\n    if (messageSent) {\n      return \"Message Sent!\";\n    }\n\n    return \"Submit\";\n  };\n\n  var renderIcon = function renderIcon() {\n    if (isFormSubmitting) {\n      return __jsx(Icon, {\n        type: \"loading\",\n        style: {\n          color: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n\n    if (messageSent) {\n      return __jsx(Icon, {\n        type: \"check-circle\",\n        style: {\n          color: \"#ffffff\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(\"img\", {\n      src: \"/images/paper-plane.svg\",\n      alt: \"paper-plane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  };\n\n  return __jsx(FormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, __jsx(HoverText, {\n    className: \"h2\",\n    string: \"Contact Me\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"I am interested in freelance opportunities - especially ambitious or large projects. However, if you have other request or question, don't hesitate to contact me using below form either.\"), __jsx(Form, {\n    className: \"form-group\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, getFieldDecorator(\"name\", {\n    rules: [{\n      required: true,\n      message: \"Name is required\"\n    }]\n  })(__jsx(TextInput, {\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }))), __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, getFieldDecorator(\"email\", {\n    rules: [{\n      required: true,\n      message: \"Email is required\"\n    }]\n  })(__jsx(TextInput, {\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })))), __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, getFieldDecorator(\"subject\", {// rules: [{ required: true, message: \"Email is required\" }]\n  })(__jsx(TextInput, {\n    placeholder: \"Subject\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }))), __jsx(Item, {\n    className: \"custom-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, getFieldDecorator(\"message\", {\n    rules: [{\n      required: true,\n      message: \"Message is required\"\n    }]\n  })(__jsx(TextArea, {\n    placeholder: \"Message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), __jsx(InputGroupWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), __jsx(SkewedButton, {\n    htmlType: \"submit\",\n    disabled: isFormSubmitting || messageSent,\n    className: messageSent ? \"success\" : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    className: \"submit-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, renderIcon()), __jsx(\"span\", {\n    className: \"submit-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, renderButtonMessage())))));\n};\n\nexport default Form.create()(ContactForm);","map":{"version":3,"sources":["/Users/billyjoesantos/Desktop/personal/website-next/components/ContactMe/contact-form.js"],"names":["useState","Form","Icon","message","FormWrapper","InputGroupWrapper","TextInput","TextArea","SkewedButton","HoverText","emailjs","Item","ContactForm","form","isFormSubmitting","setFormToSubmitting","messageSent","setMessageSent","getFieldDecorator","handleSubmit","e","preventDefault","validateFields","err","values","template_params","name","email","subject","service_id","template_id","send","data","status","resetFields","success","renderButtonMessage","renderIcon","color","rules","required","create"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,OAArB,QAAoC,MAApC;AACA,SAASC,WAAT,EAAsBC,iBAAtB,QAA+C,UAA/C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,aAApB;IACQC,I,GAASV,I,CAATU,I;;AACR,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACeb,QAAQ,CAAC,KAAD,CADvB;AAAA,MAC1Bc,gBAD0B;AAAA,MACRC,mBADQ;;AAAA,mBAEKf,QAAQ,CAAC,KAAD,CAFb;AAAA,MAE1BgB,WAF0B;AAAA,MAEbC,cAFa;;AAAA,MAG3BC,iBAH2B,GAGLL,IAHK,CAG3BK,iBAH2B;;AAIjC,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAN,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAF,IAAAA,IAAI,CAACS,cAAL,CAAoB,iBAAOC,GAAP,EAAYC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACdD,GADc;AAAA;AAAA;AAAA;;AAEdE,cAAAA,eAFc,GAEI;AACrBC,gBAAAA,IAAI,EAAEF,MAAM,CAACE,IADQ;AAErBC,gBAAAA,KAAK,EAAEH,MAAM,CAACG,KAFO;AAGrBC,gBAAAA,OAAO,EAAEJ,MAAM,CAACI,OAHK;AAIrBzB,gBAAAA,OAAO,EAAEqB,MAAM,CAACrB;AAJK,eAFJ;AASd0B,cAAAA,UATc,GASD,kBATC;AAUdC,cAAAA,WAVc,GAUA,cAVA;AAAA;AAAA,+CAWDpB,OAAO,CAACqB,IAAR,CAAaF,UAAb,EAAyBC,WAAzB,EAAsCL,eAAtC,CAXC;;AAAA;AAWdO,cAAAA,IAXc;;AAYlB,kBAAIA,IAAI,CAACC,MAAL,KAAgB,GAApB,EAAyB;AACxBpB,gBAAAA,IAAI,CAACqB,WAAL;AACA/B,gBAAAA,OAAO,CAACgC,OAAR,CAAgB,MAAhB;AACA,eAHD,MAGO;AACNhC,gBAAAA,OAAO,CAACgC,OAAR,CAAgB,wBAAhB;AACA;;AACDpB,cAAAA,mBAAmB,CAAC,KAAD,CAAnB;;AAlBkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;AAqBA,GAxBD;;AAyBA,MAAMqB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AACjC,QAAItB,gBAAJ,EAAsB;AACrB,aAAO,YAAP;AACA;;AAED,QAAIE,WAAJ,EAAiB;AAChB,aAAO,eAAP;AACA;;AAED,WAAO,QAAP;AACA,GAVD;;AAWA,MAAMqB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACxB,QAAIvB,gBAAJ,EAAsB;AACrB,aAAO,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,KAAK,EAAE;AAAEwB,UAAAA,KAAK,EAAE;AAAT,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AAED,QAAItB,WAAJ,EAAiB;AAChB,aAAO,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAE;AAAEsB,UAAAA,KAAK,EAAE;AAAT,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AAED,WAAO;AAAK,MAAA,GAAG,EAAC,yBAAT;AAAmC,MAAA,GAAG,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAVD;;AAWA,SACC,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,SAAD;AAAW,IAAA,SAAS,EAAC,IAArB;AAA0B,IAAA,MAAM,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kMAFD,EAOC,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEnB,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,iBAAiB,CAAC,MAAD,EAAS;AAC1BqB,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBrC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADmB,GAAT,CAAjB,CAEE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADD,EAMC,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEe,iBAAiB,CAAC,OAAD,EAAU;AAC3BqB,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBrC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADoB,GAAV,CAAjB,CAEE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAND,CADD,EAaC,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEe,iBAAiB,CAAC,SAAD,EAAY,CAC7B;AAD6B,GAAZ,CAAjB,CAEE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAbD,EAkBC,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEA,iBAAiB,CAAC,SAAD,EAAY;AAC7BqB,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBrC,MAAAA,OAAO,EAAE;AAA3B,KAAD;AADsB,GAAZ,CAAjB,CAEE,MAAC,QAAD;AAAU,IAAA,WAAW,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAlBD,EAuBC,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,MAAC,YAAD;AACC,IAAA,QAAQ,EAAC,QADV;AAEC,IAAA,QAAQ,EAAEW,gBAAgB,IAAIE,WAF/B;AAGC,IAAA,SAAS,EAAEA,WAAW,GAAG,SAAH,GAAe,EAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BqB,UAAU,EAAzC,CALD,EAMC;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCD,mBAAmB,EAArD,CAND,CAFD,CAvBD,CAPD,CADD;AA6CA,CAhGD;;AAiGA,eAAenC,IAAI,CAACwC,MAAL,GAAc7B,WAAd,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { Form, Icon, message } from \"antd\";\nimport { FormWrapper, InputGroupWrapper } from \"./styles\";\nimport TextInput from \"../input_fields/TextInput\";\nimport TextArea from \"../input_fields/TextArea\";\nimport { SkewedButton } from \"../button/\";\nimport HoverText from \"../HoverText\";\nimport emailjs from \"emailjs-com\";\nconst { Item } = Form;\nconst ContactForm = ({ form }) => {\n\tconst [isFormSubmitting, setFormToSubmitting] = useState(false);\n\tconst [messageSent, setMessageSent] = useState(false);\n\tlet { getFieldDecorator } = form;\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tsetFormToSubmitting(true);\n\t\tform.validateFields(async (err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tlet template_params = {\n\t\t\t\t\tname: values.name,\n\t\t\t\t\temail: values.email,\n\t\t\t\t\tsubject: values.subject,\n\t\t\t\t\tmessage: values.message\n\t\t\t\t};\n\n\t\t\t\tlet service_id = \"billy_joe_santos\";\n\t\t\t\tlet template_id = \"contact_form\";\n\t\t\t\tlet data = await emailjs.send(service_id, template_id, template_params);\n\t\t\t\tif (data.status === 200) {\n\t\t\t\t\tform.resetFields();\n\t\t\t\t\tmessage.success(\"Sent\");\n\t\t\t\t} else {\n\t\t\t\t\tmessage.success(\"Sorry! Try again later\");\n\t\t\t\t}\n\t\t\t\tsetFormToSubmitting(false);\n\t\t\t}\n\t\t});\n\t};\n\tconst renderButtonMessage = () => {\n\t\tif (isFormSubmitting) {\n\t\t\treturn \"Sending...\";\n\t\t}\n\n\t\tif (messageSent) {\n\t\t\treturn \"Message Sent!\";\n\t\t}\n\n\t\treturn \"Submit\";\n\t};\n\tconst renderIcon = () => {\n\t\tif (isFormSubmitting) {\n\t\t\treturn <Icon type=\"loading\" style={{ color: \"#ffffff\" }} />;\n\t\t}\n\n\t\tif (messageSent) {\n\t\t\treturn <Icon type=\"check-circle\" style={{ color: \"#ffffff\" }} />;\n\t\t}\n\n\t\treturn <img src=\"/images/paper-plane.svg\" alt=\"paper-plane\" />;\n\t};\n\treturn (\n\t\t<FormWrapper>\n\t\t\t<HoverText className=\"h2\" string=\"Contact Me\" />\n\t\t\t<p>\n\t\t\t\tI am interested in freelance opportunities - especially ambitious or\n\t\t\t\tlarge projects. However, if you have other request or question, don't\n\t\t\t\thesitate to contact me using below form either.\n\t\t\t</p>\n\t\t\t<Form className=\"form-group\" onSubmit={handleSubmit}>\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t\t{getFieldDecorator(\"name\", {\n\t\t\t\t\t\t\trules: [{ required: true, message: \"Name is required\" }]\n\t\t\t\t\t\t})(<TextInput placeholder=\"Name\" />)}\n\t\t\t\t\t</Item>\n\t\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t\t{getFieldDecorator(\"email\", {\n\t\t\t\t\t\t\trules: [{ required: true, message: \"Email is required\" }]\n\t\t\t\t\t\t})(<TextInput placeholder=\"Email\" />)}\n\t\t\t\t\t</Item>\n\t\t\t\t</InputGroupWrapper>\n\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t{getFieldDecorator(\"subject\", {\n\t\t\t\t\t\t// rules: [{ required: true, message: \"Email is required\" }]\n\t\t\t\t\t})(<TextInput placeholder=\"Subject\" />)}\n\t\t\t\t</Item>\n\t\t\t\t<Item className=\"custom-field\">\n\t\t\t\t\t{getFieldDecorator(\"message\", {\n\t\t\t\t\t\trules: [{ required: true, message: \"Message is required\" }]\n\t\t\t\t\t})(<TextArea placeholder=\"Message\" />)}\n\t\t\t\t</Item>\n\t\t\t\t<InputGroupWrapper>\n\t\t\t\t\t<div />\n\t\t\t\t\t<SkewedButton\n\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\tdisabled={isFormSubmitting || messageSent}\n\t\t\t\t\t\tclassName={messageSent ? \"success\" : \"\"}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"submit-icon\">{renderIcon()}</span>\n\t\t\t\t\t\t<span className=\"submit-message\">{renderButtonMessage()}</span>\n\t\t\t\t\t</SkewedButton>\n\t\t\t\t</InputGroupWrapper>\n\t\t\t</Form>\n\t\t</FormWrapper>\n\t);\n};\nexport default Form.create()(ContactForm);\n"]},"metadata":{},"sourceType":"module"}